<!DOCTYPE html>
<html lang="en">
<head>
<title><%= trello.organization_name %> Releases Overview</title>
<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js?ver=3.8.1'></script>
<link href="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" type="text/css" rel="stylesheet" media="screen">
<script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<link href='https://fonts.googleapis.com/css?family=Open+Sans:400,300,600,800,700' rel='stylesheet' type='text/css'>
<link href="stylesheets/trello.css" rel="stylesheet" type="text/css">
<link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width">
<style type="text/css">

.table>tbody>tr.in-progress>th {
  background-color: #94cc75;
  border-top: 1px solid #94cc75;
}
.table>tbody>tr.next>th {
  background-color: #c4e3b3;
  border-top: 1px solid #c4e3b3;
}
.table>tbody>tr.backlog>th {
  background-color: #dbedfe;
  border-top: 1px solid #dbedfe;
}
.table.table-rows>tbody>tr>th,
.table.table-rows>tbody>tr>td {
  padding: 15px;
}

</style>

</head>

<body>
  <div class="navbar navbar-default navbar-fixed-top" role="navigation">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <div class="brand" style="background: transparent url('<%=trello.logo%>') no-repeat left -5px; background-size: 200px auto">
          </div>
        </div>
        <div class="navbar-collapse collapse">
          <ul class="nav navbar-nav">
              <% LINKS.each do |page_name, page_title|
                if page_name != 'releases_overview' %>
                  <li><a href='<%=page_name%>.html'><%=page_title%></a></li>
                <%else%>
                  <li><a class="active" href='<%=page_name%>.html'><%=page_title%></a></li>
                <%end
                end%>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </div>

  <div class="container">

    <h2 class="visible-xs"><%= trello.organization_name %> Releases Overview</h2>

<%
      release_data = {}
      releases = []
      search_list_info = []
      trello.teams.keys.map{ |team_name| team_name.to_s }.each do |team_name|
        trello.team_boards(team_name).each do |board|
          trello.board_lists(board).each do |list|
            search_list_info << [team_name, board, list]
          end
        end
      end

      trello.roadmap_boards.each do |board|
        trello.board_lists(board).each do |list|
          if TrelloHelper::NEW_STATES.include?(list.name)
            search_list_info << ['roadmap', board, list]
            break
          end
        end
      end

      cards_by_id = {}
      search_list_info.each do |list_info|
        team_name = list_info[0]
        board = list_info[1]
        list = list_info[2]
        list_name = list.name
        complete = false
        status = 'Planned'
        pos_adjustment = TrelloHelper::LIST_POSITION_ADJUSTMENT[list_name]
        if TrelloHelper::ACCEPTED_STATES.include?(list_name) || list_name =~ TrelloHelper::SPRINT_REGEXES
          pos_adjustment = 0
          status = 'Complete'
          complete = true
        elsif TrelloHelper::CURRENT_SPRINT_NOT_ACCEPTED_STATES.include?(list_name)
          status = 'In Progress'
        end
        pos_adjustment = TrelloHelper::MAX_LIST_POSITION_ADJUSTMENT unless pos_adjustment
        cards = trello.list_cards(list)
        cards.each_with_index do |card, index|
          cards_by_id[card.id] = card
          labels = trello.card_labels(card)
          label_names = labels.map{ |label| label.name }
          label_names.each do |label_name|
            if label_name =~ TrelloHelper::RELEASE_LABEL_REGEX
                state = $1
                release = label_name
                orig_state = state
                if complete
                  state = 'committed'
                end
                pos = index + pos_adjustment
                releases << [label_name, label_name, label_name, label_name, label_name] unless release_data[release]
                release_data[release] = {} unless release_data[release]
                release_data[release][state] = [] unless release_data[release][state]
                release_data[release][state] << [card, status, board, team_name, list_name, orig_state, pos]
              end
          end
        end
      end

      tag_to_epics = trello.tag_to_epics

      releases.sort_by!{ |release| [release[1], release[2], release[3], release[4]] }
%>
<%
      if trello.other_products && !trello.other_products.empty?
%>
<h2>Product Releases</h2>
<ul>
<%
        if product.nil?
%>
  <li><%=trello.default_product.upcase%></li>
<%
        else
%>
  <li><a href="releases_overview.html"><%=trello.default_product.upcase%></a></li>
<%
        end
        trello.other_products.each do |p|
          if p == product
%>
  <li><%=p.upcase%></li>
<%
          else
%>
  <li><a href="releases_overview_<%=p%>.html"><%=p.upcase%></a></li>
<%
          end
        end
%>
</ul>
<%
      end
%>
<h2>Table of Contents</h2>
<ul>
<%
      releases.each do |release|
        release_name = release[0]
%>
  <li><a href='#<%=release_name%>'><%=release_name%></a></li>
  <ul>
<%
        states = release_data[release_name]
        release_cards_history = trello.release_cards_history(product, release_name)
        added_to_release = false
        TrelloHelper::RELEASE_STATES.each do |state|
          release_cards = states[state]
          next unless release_cards
          if release_cards_history
            release_cards.each do |release_card|
              if !release_cards_history.delete(release_card[0].id)
                added_to_release = true
              end
            end
          end
%>
    <li><a href='#<%="#{state}-#{release_name}"%>'><%=TrelloHelper::RELEASE_STATE_DISPLAY_NAME[state]%></a> (<%=release_cards.length%> cards)</li>
<%
        end
        if release_cards_history
          removed_from_release = !release_cards_history.empty?
          if removed_from_release
%>
    <li><a href='#removed-from-<%=release_name%>'>Removed From Release</a></li>
<%
          end
          if added_to_release
%>
    <li><a href='#added-to-<%=release_name%>'>Added to Release</a></li>
<%
          end
        end
%>
    <li><a href='#<%=release_name%>_completed_points_and_in_progress'>Completed + In Progress Points Summary</a></li>
    <li><a href='#<%=release_name%>_completed_points'>Completed Points Summary</a></li>
  </ul>
<%
      end
%>
</ul>
<br />
<hr>
<%
      releases.each do |release|
        release_name = release[0]
        release_complete_sizing_total = 0
        release_in_progress_sizing_total = 0
        release_remaining_sizing_total = 0
        team_complete_sizing_totals = {}
        team_in_progress_sizing_totals = {}
        team_remaining_sizing_totals = {}
%>
<h2 class="anchor" id="<%=release_name%>"><%=release_name.upcase%></h2>
<div class="container">
<% 
        release_cards_history = trello.release_cards_history(product, release_name)
        cards_added_to_release = []

        states = release_data[release_name]
        TrelloHelper::RELEASE_STATES.each do |state|
          release_cards = states[state]
          next unless release_cards

          state_complete_sizing_total = 0
          state_in_progress_sizing_total = 0
          state_remaining_sizing_total = 0
          sorted_by_title = nil
          position_title = nil
          if state == 'committed'
            release_cards.sort_by! {|release_card| [release_card[1], release_card[3], release_card[6]]}
            sorted_by_title = '(sorted by status, team, position)'
            position_title = 'Team Position Within Status'
          else
            release_cards.sort_by! {|release_card| [release_card[3], release_card[6]]}
            sorted_by_title = '(sorted by team, position)'
            position_title = 'Team Position'
          end
%>
<h5 title="<%="#{trello.state_title(state, product, release_name)} #{sorted_by_title}"%>" class="anchor" id="<%="#{state}-#{release_name}"%>"><%=TrelloHelper::RELEASE_STATE_DISPLAY_NAME[state]%> (<%=release_name%>)<span class="pficon-help"></span></h5>
<div class="container">
<div class="table-responsive">
<table class="table table-normal table-condensed">
  <tr><th title="Card Name">Scenario</th><th title="<%=position_title%>">Position<span class="pficon-help"></span></th><th title="Corresponding Board">Board</th><th title="Planned, In Progress, or Complete">Status<span class="pficon-help"></span></th><th title="Associated Epics">Epic(s)</th><th title="Additional Release(s)">Additional Release(s)</th><th title="Sizing in Story Points (Team Rolling Total)">Sizing<span class="pficon-help"></span></th></tr>
<%
          previous_team_name = nil
          team_positions = {}
          team_sizing_totals = {}
          release_cards.each do |release_card|
            card = release_card[0]
            status = release_card[1]
            board = release_card[2]
            team_name = release_card[3]
            list_name = release_card[4]
            orig_state = release_card[5]

            if release_cards_history
              if !release_cards_history.delete(card.id)
                cards_added_to_release << {
                                            'short_url' => card.short_url,
                                            'name' => card.name,
                                            'team_name' => team_name,
                                            'state' => orig_state
                                          }
              end
            end


            if previous_team_name != team_name
              team_positions[team_name] = 0 unless team_positions[team_name]
              team_sizing_totals[team_name] = 0 unless team_sizing_totals[team_name]
              previous_team_name = team_name
            end
            team_positions[team_name] += 1
            labels = trello.card_labels(card)
            label_names = labels.map{ |label| label.name }
            epics = []
            addtl_releases = []
            stage1_dep_indicator = ''
            label_names.each do |label_name|
              if label_name.start_with? 'epic-'
                epic_card = nil
                if tag_to_epics[label_name]
                  epic_card = tag_to_epics[label_name].first
                end
                epics << [label_name[5..-1], epic_card ? epic_card.url : nil]
              elsif label_name =~ TrelloHelper::RELEASE_LABEL_REGEX
                if product != $3
                  addtl_releases << [$3, label_name, $1, $4]
                end
              elsif label_name == TrelloHelper::STAGE1_DEP_LABEL
                stage1_dep_indicator = '*'
              end
            end

            related_rfe = nil

            name = card.name.strip
            sizing = nil
            team_complete_sizing_totals[team_name] = 0 unless team_complete_sizing_totals[team_name]
            team_in_progress_sizing_totals[team_name] = 0 unless team_in_progress_sizing_totals[team_name]
            team_remaining_sizing_totals[team_name] = 0 unless team_remaining_sizing_totals[team_name]
            if name =~ TrelloHelper::CARD_NAME_REGEX
              sizing = $2.to_i
              team_sizing_totals[team_name] += sizing
              name = $3
              if status == 'Complete'
                state_complete_sizing_total += sizing
                team_complete_sizing_totals[team_name] += sizing
              else
                if status == 'In Progress'
                  state_in_progress_sizing_total += sizing
                  team_in_progress_sizing_totals[team_name] += sizing
                end
                state_remaining_sizing_total += sizing
                team_remaining_sizing_totals[team_name] += sizing
              end
            end
            if status == 'In Progress'
              if TrelloHelper::COMPLETE_STATES.include?(list_name)
                status = 'In Progress (on_qe)'
              end
            end
%>
<tr>
<td><div class="anchor" id="<%="#{state}-#{release_name}-#{team_name}"%>">
<%
        if related_rfe
%>
(<a href='<%=related_rfe%>'>RFE</a>)
<%
        end
%>
<a href='<%=card.url%>'><%=name%></a></div></td>
<td title="<%=position_title%>"><%=team_positions[team_name]%><%=stage1_dep_indicator%></td>
<td><a href='<%=board.url%>'><%=board.name%></a></td>
<td title="Plan State: <%=orig_state%>, List: <%=list_name%>"><%=status%></td>
<td><%epics.each_with_index do |epic, index|
        separator = (index == epics.length - 1) ? '' : ', '
        if epic[1]
%>
<a href='<%=epic[1]%>'><%=epic[0]%></a><%=separator%>
<%
        else
%>
<%="#{epic[0]}#{separator}"%>
<%
        end
%>
<%end%></td>
<td><%addtl_releases.each_with_index do |release_info, index|
        p = release_info[0]
        label = release_info[1]
        addtl_state = release_info[2]
        addtl_release = release_info[3]
        product_release_page = nil
        if p
          product_release_page = "releases_overview_#{p}.html##{addtl_state}-#{addtl_release}"
        else
          product_release_page = "releases_overview.html##{addtl_state}-#{addtl_release}"
        end
        separator = (index == addtl_releases.length - 1) ? '' : ', '
%>
<a href='<%=product_release_page%>'><%=label%></a><%=separator%>
<%end%></td>
<td title="Sizing in Story Points (Team Rolling Total)" nowrap><%=sizing ? "#{sizing} (#{team_sizing_totals[team_name]})" : ''%></td>
</tr>
<%
          end

          release_complete_sizing_total += state_complete_sizing_total
          release_in_progress_sizing_total += state_in_progress_sizing_total
          release_remaining_sizing_total += state_remaining_sizing_total
          completed_details = nil
          if state == 'committed'
            completed_details = "Completed Points (#{state}): #{state_complete_sizing_total} of #{state_complete_sizing_total + state_remaining_sizing_total}"
          else
            completed_details = "Total Points (#{state}): #{state_remaining_sizing_total}"
          end
%>
</table>
<i><%=completed_details%></i><br />
<br />
<br />
</div>
</div>
<%
        end
        unless release_cards_history.nil? || release_cards_history.empty?
          removed_sizing_total = 0
%>
<h5 title="Cards removed from the release after the release began" class="anchor" id="removed-from-<%=release_name%>">Removed from Release (<%=release_name%>)<span class="pficon-help"></span></h5>
<div class="container">
<div class="table-responsive">
<table class="table table-normal table-condensed">
  <tr><th title="Card Name">Scenario</th><th title="Team">Team</th><th title="Committed, Targeted, or Proposed">Original Plan State<span class="pficon-help"></span></th><th title="Other Release(s)">Other Release(s)</th><th title="Sizing in Story Points">Sizing</th></tr>
<%
          release_cards_history_list = []
          release_cards_history.each do |id, card_info|
            card = cards_by_id[id] || trello.find_card(id, false)
            other_releases = []
            if card
              labels = trello.card_labels(card)
              label_names = labels.map{ |label| label.name }
              label_names.each do |label_name|
                if label_name =~ TrelloHelper::RELEASE_LABEL_REGEX
                  other_releases << [$3, label_name, $1, $4]
                end
              end
            end
            card_info['other_releases'] = other_releases
            if card_info['name'] =~ TrelloHelper::CARD_NAME_REGEX
              sizing = $2.to_i
              card_info['sizing'] = sizing
              card_info['name'] = $3
              removed_sizing_total += sizing
            end
            release_cards_history_list << card_info
          end
          release_cards_history_list.sort_by!{ |card_info| [TrelloHelper::RELEASE_STATE_ORDER[card_info['state']], card_info['team_name']] }
          release_cards_history_list.each do |card_info|
%>
<tr>
<td><a href='<%=card_info['short_url']%>'><%=card_info['name']%></a></div></td>
<td><%=card_info['team_name']%></td>
<td><%=card_info['state']%></td>
<td><%card_info['other_releases'].each_with_index do |release_info, index|
            p = release_info[0]
            label = release_info[1]
            addtl_state = release_info[2]
            addtl_release = release_info[3]
            product_release_page = nil
            if p
              product_release_page = "releases_overview_#{p}.html##{addtl_state}-#{addtl_release}"
            else
              product_release_page = "releases_overview.html##{addtl_state}-#{addtl_release}"
            end
            separator = (index == card_info['other_releases'].length - 1) ? '' : ', '
%>
<a href='<%=product_release_page%>'><%=label%></a><%=separator%>
<%end%></td>
<td><%=card_info['sizing']%></td>
</tr>
<%
          end
%>
</table>
<i>Total Points (removed): <%=removed_sizing_total%></i><br />
<br />
<br />
</div>
</div>
<%
        end
        unless cards_added_to_release.empty?
          added_sizing_total = 0
%>
<h5 title="Cards added to the release after the release began" class="anchor" id="added-to-<%=release_name%>">Added to Release (<%=release_name%>)<span class="pficon-help"></span></h5>
<div class="container">
<div class="table-responsive">
<table class="table table-normal table-condensed">
  <tr><th title="Card Name">Scenario</th><th title="Team">Team</th><th title="Committed, Targeted, or Proposed">Plan State<span class="pficon-help"></span></th><th title="Sizing in Story Points">Sizing</th></tr>
<%
          cards_added_to_release.sort_by!{ |card_info| [TrelloHelper::RELEASE_STATE_ORDER[card_info['state']], card_info['team_name']] }
          cards_added_to_release.each do |card_info|
            if card_info['name'] =~ TrelloHelper::CARD_NAME_REGEX
              sizing = $2.to_i
              card_info['sizing'] = sizing
              card_info['name'] = $3
              added_sizing_total += sizing
            end
%>
<tr>
<td><a href='<%=card_info['short_url']%>'><%=card_info['name']%></a></div></td>
<td><%=card_info['team_name']%></td>
<td><%=card_info['state']%></td>
<td><%=card_info['sizing']%></td>
</tr>
<%
          end
%>
</table>
<i>Total Points (added): <%=added_sizing_total%></i><br />
<br />
<br />
</div>
</div>
<%
        end
%>
<h5 class="anchor" id="<%=release_name%>_completed_points_and_in_progress"><%=release_name%> Completed + In Progress Points:</h5>
<div class="container">
<%
        team_complete_sizing_totals.each do |team_name, complete_sizing|
%>
<%=team_name.upcase%>: <%="#{complete_sizing + team_in_progress_sizing_totals[team_name]} of #{complete_sizing + team_remaining_sizing_totals[team_name]}"%><br />
<%
        end
%>
<strong>Total: <%="#{release_complete_sizing_total + release_in_progress_sizing_total} of #{release_complete_sizing_total + release_remaining_sizing_total}"%></strong><br />
</div>
<br />
<h4 class="anchor" id="<%=release_name%>_completed_points"><%=release_name%> Completed Points:</h4>
<div class="container">
<%
        team_complete_sizing_totals.each do |team_name, complete_sizing|
%>
<%=team_name.upcase%>: <%="#{complete_sizing} of #{complete_sizing + team_remaining_sizing_totals[team_name]}"%><br />
<%
        end
%>
<strong>Total: <%="#{release_complete_sizing_total} of #{release_complete_sizing_total + release_remaining_sizing_total}"%></strong><br />
</div>
</div>
<br />
<br />
<%

      end
%>
* - Stage 1 Dependency (due two sprints before feature complete)
    <br/>
    <br/>
    <br/>
    <br/>
    <hr>
    <i>Generated at <%=Time.now.strftime("%I:%M%p %Z")%></i><%if trello.archive_path%> - <a href="<%=trello.archive_path%>">archives</a><%end%>
  </div><!-- /container -->
</body>
</html>
